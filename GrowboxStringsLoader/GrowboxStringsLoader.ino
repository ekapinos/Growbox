#include <EEPROM.h>

unsigned int g_position = 0;

void setup() {  
  
  Serial.begin(115200);
  while (!Serial) {
    ; // wait for serial port to connect. Needed for Leonardo only
  } 

  Serial.println(F("Save output as ../Growbox/EEPROMStrings.h"));
  Serial.println();
  Serial.println();
  Serial.println(F("#ifndef GB_EEPROMStrings_h"));
  Serial.println(F("#define GB_EEPROMStrings_h"));
  Serial.println(); 
  Serial.println(F("// Auto generated by ../GrowboxStringsLoader/GrowboxStringsLoader.ino do not edit directly"));
  Serial.println(); 
  Serial.println(F("#include <EEPROM.h>"));
  Serial.println(); 
  
  writeString("ES_printSendPinsStatus_PinOutputInput",       "Pin OUTPUT INPUT");
  
  writeString("ES_printSendPinsStatus_OUTPUTOffset",         "     -   ");
  writeString("ES_printSendPinsStatus_INPUTOffset",          "  -     ");
  
  writeString("ES_printSendPinsStatus_ReservedBySerialUSB",  "Reserved by Serial/USB. Can be used, if Serial/USB won't be connected");
  writeString("ES_printSendPinsStatus_RelayLight",           "Relay: light on(0)/off(1)");
  writeString("ES_printSendPinsStatus_RelayFan",             "Relay: fan max(0)/min(1) speed switch");
  writeString("ES_printSendPinsStatus_RelayFanMinMax",       "Relay: fun max(0)/min(1) speed switch");
  writeString("ES_printSendPinsStatus_1Wire",                "1-Wire: termometer");
  writeString("ES_printSendPinsStatus_SerialMonotor",        "Use serial monitor on(1)/off(0)");
  writeString("ES_printSendPinsStatus_ErrorStatus",          "Error status");
  writeString("ES_printSendPinsStatus_Breeze",               "Breeze");
  writeString("ES_printSendPinsStatus_I2C",                  "Reserved by I2C. Can be used, if SCL, SDA pins will be used");
  
  Serial.println();
  
  Serial.println("static String EEPROMStringLoad(word offset) {");
  Serial.println("  String rez;");
  Serial.println("  char c = EEPROM.read(offset++);");
  Serial.println("   while(c){");
  Serial.println("    rez += c;");
  Serial.println("    c = EEPROM.read(offset++);");
  Serial.println("  }");
  Serial.println("  return rez;");
  Serial.println("}");
  
  Serial.println(F("#endif"));
  
}

void loop() {

}

void writeString(char* varName, char* value){
  word l_position = 0;
  l_position += Serial.print(F("const word "));
  l_position += Serial.print(varName);
  
  for (word i = l_position; i<58; i++ ){
    l_position += Serial.print(' ');  
  }
  l_position += Serial.print(F(" = 0x"));
  l_position += Serial.print(g_position, HEX);
  l_position += Serial.print(F("; // "));
  l_position += Serial.println(value);
  
  while(*value){
      EEPROM.write(g_position++, *value++);
      l_position++;
  }
  EEPROM.write(g_position++,'\0');  // Save the NULL terminator
}

